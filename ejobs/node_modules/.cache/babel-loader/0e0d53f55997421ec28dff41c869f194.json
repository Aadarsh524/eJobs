{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\P.js\";\nimport React, { Component } from 'react';\nimport \"../../Css/Profile.css\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCurrentProfile } from '../../actions/profileAction.js';\nimport Spinner from '../../Spinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      profile: nextProps.profile\n    });\n  }\n\n  render() {\n    const {\n      profile,\n      loading\n    } = this.props.profile;\n    let Allprojects;\n\n    if (profile === null || loading) {\n      Allprojects = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    } else {\n      Allprojects = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Yes ,There is Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Allprojects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nProfile.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Profile);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/P.js"],"names":["React","Component","connect","PropTypes","getCurrentProfile","Spinner","Profile","componentDidMount","props","componentWillReceiveProps","nextProps","setState","profile","render","loading","Allprojects","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;;;AAGC,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAE7BM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,iBAAX;AAEH;;AACDK,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAExB,SAAKC,QAAL,CAAc;AACTC,MAAAA,OAAO,EAAEF,SAAS,CAACE;AADV,KAAd;AAIV;;AACFC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA,OAAF;AAAWE,MAAAA;AAAX,QAAsB,KAAKN,KAAL,CAAWI,OAAvC;AACI,QAAIG,WAAJ;;AAER,QAAIH,OAAO,KAAK,IAAZ,IAAoBE,OAAxB,EAAiC;AAC/BC,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AACD;;AAEG,wBACK;AAAA,gBACIA;AADJ;AAAA;AAAA;AAAA;AAAA,YADL;AAKH;;AA5B4B;;AAgCjCT,OAAO,CAACU,SAAR,GAAoB;AAClBZ,EAAAA,iBAAiB,EAAED,SAAS,CAACc,IAAV,CAAeC,UADhB;AAElBN,EAAAA,OAAO,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAFR,CAApB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,OAAO,EAAES,KAAK,CAACT;AADmB,CAAZ,CAAxB;;AAGA,eAAeV,OAAO,CAACkB,eAAD,EAAkB;AAAGhB,EAAAA;AAAH,CAAlB,CAAP,CAAiDE,OAAjD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../../Css/Profile.css\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile } from '../../actions/profileAction.js';\r\n\r\nimport Spinner from '../../Spinner.js'\r\n\r\n\r\n class Profile extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getCurrentProfile();\r\n       \r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n          \r\n                this.setState({\r\n                     profile: nextProps.profile,\r\n                });\r\n                \r\n     }\r\n    render() {\r\n        const { profile, loading} = this.props.profile; \r\n            let Allprojects;\r\n\r\n    if (profile === null || loading) {\r\n      Allprojects = <Spinner />;\r\n    } else {\r\n      Allprojects = <h1>Yes ,There is Profile</h1>;\r\n    }\r\n          \r\n        return (\r\n             <div>\r\n                {Allprojects}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\nexport default connect(mapStateToProps, {  getCurrentProfile })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}