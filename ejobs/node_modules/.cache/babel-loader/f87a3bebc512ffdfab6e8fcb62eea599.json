{"ast":null,"code":"import axios from 'axios';\nimport { GET_MESSAGE, MESSAGE_LOADING, GET_MESSAGE_ROOMS } from '../actions/types';\nexport const sendMessage = message => dispatch => {\n  axios.post('http://localhost:5000/message', message).then(res => {}).catch(err => dispatch({}));\n};\nexport const getAllMessages = otherPerson => dispatch => {\n  dispatch(setMessageLoading());\n  axios.get('http://localhost:5000/getAllMessages', otherPerson).then(res => dispatch({\n    type: GET_MESSAGE,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const getUserRooms = () => dispatch => {\n  dispatch(setMessageLoading());\n  axios.get('http://localhost:5000/getUserRooms').then(res => dispatch({\n    type: GET_MESSAGE_ROOMS,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const setMessageLoading = () => {\n  return {\n    type: MESSAGE_LOADING\n  };\n};","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/actions/messageAction.js"],"names":["axios","GET_MESSAGE","MESSAGE_LOADING","GET_MESSAGE_ROOMS","sendMessage","message","dispatch","post","then","res","catch","err","getAllMessages","otherPerson","setMessageLoading","get","type","payload","data","getUserRooms"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACGC,WADH,EAEEC,eAFF,EAGEC,iBAHF,QAIO,kBAJP;AAOA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAcC,QAAQ,IAAI;AACnDN,EAAAA,KAAK,CAACO,IAAN,CAAW,+BAAX,EAA4CF,OAA5C,EACCG,IADD,CACMC,GAAG,IAAG,CAAE,CADd,EAEEC,KAFF,CAEQC,GAAG,IACTL,QAAQ,CAAC,EAAD,CAHV;AAMD,CAPM;AAUP,OAAO,MAAMM,cAAc,GAAIC,WAAD,IAAkBP,QAAQ,IAAI;AAC1DA,EAAAA,QAAQ,CAACQ,iBAAiB,EAAlB,CAAR;AACAd,EAAAA,KAAK,CAACe,GAAN,CAAU,sCAAV,EAAiDF,WAAjD,EACCL,IADD,CACMC,GAAG,IACPH,QAAQ,CAAC;AACLU,IAAAA,IAAI,EAAEf,WADD;AAELgB,IAAAA,OAAO,EAACR,GAAG,CAACS;AAFP,GAAD,CAFV,EAMGR,KANH,CAMSC,GAAG,IACNL,QAAQ,CAAC,EAAD,CAPd;AASD,CAXM;AAcP,OAAO,MAAMa,YAAY,GAAG,MAAOb,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACQ,iBAAiB,EAAlB,CAAR;AACAd,EAAAA,KAAK,CAACe,GAAN,CAAU,oCAAV,EACCP,IADD,CACMC,GAAG,IACPH,QAAQ,CAAC;AACLU,IAAAA,IAAI,EAAEb,iBADD;AAELc,IAAAA,OAAO,EAACR,GAAG,CAACS;AAFP,GAAD,CAFV,EAMGR,KANH,CAMSC,GAAG,IACNL,QAAQ,CAAC,EAAD,CAPd;AASD,CAXM;AAYP,OAAO,MAAMQ,iBAAiB,GAAG,MAAK;AACjC,SAAM;AACFE,IAAAA,IAAI,EAAEd;AADJ,GAAN;AAGJ,CAJM","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n   GET_MESSAGE,\r\n  MESSAGE_LOADING,\r\n  GET_MESSAGE_ROOMS\r\n} from '../actions/types';\r\n\r\n\r\nexport const sendMessage = (message) =>  dispatch => {\r\n  axios.post('http://localhost:5000/message', message)\r\n  .then(res=> {})\r\n   .catch(err => \r\n    dispatch({\r\n\r\n    }))\r\n};\r\n\r\n\r\nexport const getAllMessages = (otherPerson) =>  dispatch => {\r\n  dispatch(setMessageLoading());\r\n  axios.get('http://localhost:5000/getAllMessages',otherPerson)\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_MESSAGE,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        }));\r\n};\r\n\r\n\r\nexport const getUserRooms = () =>  dispatch => {\r\n  dispatch(setMessageLoading());\r\n  axios.get('http://localhost:5000/getUserRooms')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_MESSAGE_ROOMS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        }));\r\n};\r\nexport const setMessageLoading = () =>{\r\n     return{\r\n         type: MESSAGE_LOADING\r\n     }\r\n}"]},"metadata":{},"sourceType":"module"}