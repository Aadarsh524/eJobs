{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AsClient.js\";\nimport React, { Component } from 'react';\nimport { showAllProject } from '../../actions/projectAction.js';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AsClient extends Component {\n  componentDidMount() {\n    this.props.showAllProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        project: nextProps.projects\n      });\n    }\n  }\n\n  render() {\n    const {\n      project\n    } = this.props;\n    const renderedListItems = project.map(p => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: project.projectTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderedListItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAsClient.propTypes = {\n  showAllProject: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {\n  showAllProject\n})(AsClient);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AsClient.js"],"names":["React","Component","showAllProject","connect","PropTypes","AsClient","componentDidMount","props","componentWillReceiveProps","nextProps","errors","setState","project","projects","render","renderedListItems","map","p","projectTitle","propTypes","func","isRequired","auth","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,cAAX;AACH;;AACAM,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAC7B,QAAGA,SAAS,CAACC,MAAb,EAAoB;AAChB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEH,SAAS,CAACI;AADT,OAAd;AAGH;AACP;;AAEFC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAa,KAAKL,KAAxB;AAEH,UAAMQ,iBAAiB,GAAGH,OAAO,CAACI,GAAR,CAAYC,CAAC,IAAI;AAC5C,0BACI;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA,kBAAkBL,OAAO,CAACM;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ;AAGD,KAJ4B,CAA1B;AAMG,wBACI;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA3B4B;;AA6BjCV,QAAQ,CAACc,SAAT,GAAqB;AACnBjB,EAAAA,cAAc,EAAEE,SAAS,CAACgB,IAAV,CAAeC,UADZ;AAEnBC,EAAAA,IAAI,EAAElB,SAAS,CAACmB,MAAV,CAAiBF,UAFJ;AAGnBT,EAAAA,OAAO,EAAER,SAAS,CAACmB,MAAV,CAAiBF;AAHP,CAArB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,IAAI,EAAEG,KAAK,CAACH,IADsB;AAElCV,EAAAA,OAAO,EAAEa,KAAK,CAACb;AAFmB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACqB,eAAD,EAAkB;AAAGtB,EAAAA;AAAH,CAAlB,CAAP,CAA8CG,QAA9C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { showAllProject } from '../../actions/projectAction.js'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AsClient extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.showAllProject();\r\n    }\r\n     componentWillReceiveProps(nextProps){\r\n            if(nextProps.errors){\r\n                this.setState({\r\n                    project: nextProps.projects\r\n                });\r\n            }\r\n     }\r\n\r\n    render() {\r\n        const { project} = this.props;\r\n \r\n     const renderedListItems = project.map(p => {\r\n    return (\r\n        <h1 className=\"\">{project.projectTitle}</h1>\r\n    )\r\n  })\r\n     \r\n        return (\r\n            <div>\r\n                {renderedListItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAsClient.propTypes = {\r\n  showAllProject: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  project: state.project\r\n});\r\nexport default connect(mapStateToProps, {  showAllProject })(AsClient);\r\n"]},"metadata":{},"sourceType":"module"}