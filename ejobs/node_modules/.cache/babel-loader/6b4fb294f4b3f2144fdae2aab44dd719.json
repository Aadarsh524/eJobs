{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AsFreelancer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Project from './Project';\nimport \"../../Css/AsClient.css\";\nimport Spinner from '../../Spinner.js';\nimport { showAllProject, getClientProject, getAppliedProject } from '../../actions/projectAction.js';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AsFreelancer extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.project) {\n      this.setState({\n        project: nextProps.project,\n        auth: nextProps.auth\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.showAllProject();\n    this.props.getClientProject();\n  }\n\n  render() {\n    const {\n      clientProject,\n      loading\n    } = this.props.project;\n    const {\n      user\n    } = this.props.auth;\n    let Allprojects;\n\n    if (clientProject === null || loading) {\n      Allprojects = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    } else {\n      Allprojects = /*#__PURE__*/_jsxDEV(Project, {\n        project: clientProject,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Allprojects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAsFreelancer.propTypes = {\n  getClientProject: PropTypes.func.isRequired,\n  getAppliedProject: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {\n  showAllProject,\n  getClientProject,\n  getAppliedProject\n})(AsFreelancer);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AsFreelancer.js"],"names":["React","Component","connect","Project","Spinner","showAllProject","getClientProject","getAppliedProject","PropTypes","AsFreelancer","componentWillReceiveProps","nextProps","project","setState","auth","componentDidMount","props","render","clientProject","loading","user","Allprojects","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,wBAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,EAAwBC,gBAAxB,EAAyCC,iBAAzC,QAAkE,gCAAlE;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAEhCS,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAC7B,QAAGA,SAAS,CAACC,OAAb,EAAqB;AACjB,WAAKC,QAAL,CAAc;AACVD,QAAAA,OAAO,EAAED,SAAS,CAACC,OADT;AAEVE,QAAAA,IAAI,EAAEH,SAAS,CAACG;AAFN,OAAd;AAKH;AACP;;AACCC,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWX,cAAX;AACA,SAAKW,KAAL,CAAWV,gBAAX;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,aAAF;AAAgBC,MAAAA;AAAhB,QAA4B,KAAKH,KAAL,CAAWJ,OAA7C;AACC,UAAM;AAAEQ,MAAAA;AAAF,QAAW,KAAKJ,KAAL,CAAWF,IAA5B;AAEL,QAAIO,WAAJ;;AAEA,QAAIH,aAAa,KAAK,IAAlB,IAA0BC,OAA9B,EAAuC;AACrCE,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEH,aAAlB;AAAiC,QAAA,IAAI,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAd;AACD;;AACG,wBACI;AAAA,gBACKC;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhCgC;;AAoCrCZ,YAAY,CAACa,SAAb,GAAyB;AACvBhB,EAAAA,gBAAgB,EAAEE,SAAS,CAACe,IAAV,CAAeC,UADV;AAEvBjB,EAAAA,iBAAiB,EAAEC,SAAS,CAACe,IAAV,CAAeC,UAFX;AAGvBV,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAHA,CAAzB;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,IAAI,EAAEa,KAAK,CAACb,IADsB;AAElCF,EAAAA,OAAO,EAAEe,KAAK,CAACf;AAFmB,CAAZ,CAAxB;;AAIA,eAAeV,OAAO,CAACwB,eAAD,EAAkB;AAAErB,EAAAA,cAAF;AAAkBC,EAAAA,gBAAlB;AAAoCC,EAAAA;AAApC,CAAlB,CAAP,CAAiFE,YAAjF,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Project from './Project';\r\nimport \"../../Css/AsClient.css\"\r\nimport Spinner from '../../Spinner.js'\r\nimport { showAllProject,getClientProject,getAppliedProject } from '../../actions/projectAction.js'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AsFreelancer extends Component {\r\n\r\n     componentWillReceiveProps(nextProps){\r\n            if(nextProps.project){\r\n                this.setState({\r\n                    project: nextProps.project,\r\n                    auth: nextProps.auth\r\n\r\n                });\r\n            }\r\n     }\r\n       componentDidMount(){\r\n        this.props.showAllProject();\r\n        this.props.getClientProject();\r\n    }\r\n    \r\n    render() {\r\n        const { clientProject,loading } = this.props.project;\r\n         const { user } = this.props.auth;\r\n         \r\n    let Allprojects;\r\n\r\n    if (clientProject === null || loading) {\r\n      Allprojects = <Spinner />;\r\n    } else {\r\n      Allprojects = <Project project={clientProject} user={user}/>;\r\n    }\r\n        return (\r\n            <div>\r\n                {Allprojects}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nAsFreelancer.propTypes = {\r\n  getClientProject: PropTypes.func.isRequired,\r\n  getAppliedProject: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  project: state.project\r\n});\r\nexport default connect(mapStateToProps, { showAllProject, getClientProject, getAppliedProject})(AsFreelancer);\r\n"]},"metadata":{},"sourceType":"module"}