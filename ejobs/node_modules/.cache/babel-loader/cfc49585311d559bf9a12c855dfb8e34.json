{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROJECT, PROJECT_LOADING, GET_CLIENT_PROJECT, GET_ERRORS } from './types';\nexport const postProject = (newProject, history) => dispatch => {\n  axios.post('http://localhost:5000/project', newProject).then(res => history.push(\"/\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const showAllProject = () => dispatch => {\n  dispatch(setProjectLoading());\n  axios.get('http://localhost:5000/project').then(res => dispatch({\n    type: GET_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const getClientProject = () => dispatch => {\n  axios.get('http://localhost:5000/clientProject').then(res => dispatch({\n    type: GET_CLIENT_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const setProjectLoading = () => {\n  return {\n    type: PROJECT_LOADING\n  };\n};\nexport const deleteProject = () => dispatch => {\n  axios.delete(`/delete`).then(res => dispatch({\n    type: GET_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/actions/projectAction.js"],"names":["axios","GET_PROJECT","PROJECT_LOADING","GET_CLIENT_PROJECT","GET_ERRORS","postProject","newProject","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","showAllProject","setProjectLoading","get","getClientProject","deleteProject","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,UAJF,QAMO,SANP;AAUA,OAAO,MAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,OAAb,KAA0BC,QAAQ,IAAI;AAC/DR,EAAAA,KAAK,CAACS,IAAN,CAAW,+BAAX,EAA4CH,UAA5C,EACCI,IADD,CACMC,GAAG,IAAGJ,OAAO,CAACK,IAAR,CAAa,GAAb,CADZ,EAEEC,KAFF,CAEQC,GAAG,IACTN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEX,UADC;AAEPY,IAAAA,OAAO,EAACF,GAAG,CAACG,QAAJ,CAAaC;AAFd,GAAD,CAHV;AAOD,CARM;AAWP,OAAO,MAAMC,cAAc,GAAG,MAAOX,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAACY,iBAAiB,EAAlB,CAAR;AACApB,EAAAA,KAAK,CAACqB,GAAN,CAAU,+BAAV,EACCX,IADD,CACMC,GAAG,IACPH,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEd,WADD;AAELe,IAAAA,OAAO,EAACL,GAAG,CAACO;AAFP,GAAD,CAFV,EAMGL,KANH,CAMSC,GAAG,IACNN,QAAQ,CAAC,EAAD,CAPd;AAUD,CAZM;AAcP,OAAO,MAAMc,gBAAgB,GAAG,MAAOd,QAAQ,IAAI;AACjDR,EAAAA,KAAK,CAACqB,GAAN,CAAU,qCAAV,EACCX,IADD,CACMC,GAAG,IACPH,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEZ,kBADD;AAELa,IAAAA,OAAO,EAACL,GAAG,CAACO;AAFP,GAAD,CAFV,EAMGL,KANH,CAMSC,GAAG,IACNN,QAAQ,CAAC,EAAD,CAPd;AAQD,CATM;AAYP,OAAO,MAAMY,iBAAiB,GAAG,MAAK;AACjC,SAAM;AACFL,IAAAA,IAAI,EAAEb;AADJ,GAAN;AAGJ,CAJM;AAMP,OAAO,MAAMqB,aAAa,GAAG,MAAMf,QAAQ,IAAI;AAC7CR,EAAAA,KAAK,CACFwB,MADH,CACW,SADX,EAEGd,IAFH,CAEQC,GAAG,IACPH,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEd,WADC;AAEPe,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAHZ,EAQGL,KARH,CAQSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEX,UADC;AAEPY,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CATZ;AAcD,CAfM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  GET_PROJECT,\r\n  PROJECT_LOADING,\r\n  GET_CLIENT_PROJECT,\r\n  GET_ERRORS,\r\n\r\n} from './types';\r\n\r\n\r\n\r\nexport const postProject = (newProject, history) =>  dispatch => {\r\n  axios.post('http://localhost:5000/project', newProject)\r\n  .then(res=> history.push(\"/\"))\r\n   .catch(err => \r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload:err.response.data\r\n    }))\r\n};\r\n\r\n\r\nexport const showAllProject = () =>  dispatch => {\r\n  dispatch(setProjectLoading());\r\n  axios.get('http://localhost:5000/project')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_PROJECT,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n          \r\n        }));\r\n};\r\n\r\nexport const getClientProject = () =>  dispatch => {\r\n  axios.get('http://localhost:5000/clientProject')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_CLIENT_PROJECT,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({}));\r\n};\r\n\r\n\r\nexport const setProjectLoading = () =>{\r\n     return{\r\n         type: PROJECT_LOADING\r\n     }\r\n}\r\n\r\nexport const deleteProject = () => dispatch => {\r\n  axios\r\n    .delete(`/delete`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROJECT,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}