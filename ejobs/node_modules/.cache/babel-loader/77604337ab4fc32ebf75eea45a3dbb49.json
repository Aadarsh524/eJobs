{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\PrivateRoute.js\";\nimport PropTypes from 'prop-types'; // const PrivateRoute = ({component:Component, auth, ...rest}) =>(\n//     <Route \n//         {...rest} \n//         render = {props => (\n//            auth.isAuthenticated = true ? (\n//             <Component {...props} />\n//         ):( <Redirect to=\"/login\"/>)\n//         )}\n//     />\n// );\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component,\n  auth,\n  ...rest\n}) => {\n  let ComponentToRender = component;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => auth ? /*#__PURE__*/_jsxDEV(ComponentToRender, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default withRouter(connect(mapStateToProps)(PrivateRoute));\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/PrivateRoute.js"],"names":["PropTypes","React","connect","Route","Redirect","withRouter","PrivateRoute","component","auth","rest","ComponentToRender","props","pathname","state","from","location","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmB,KAAGC;AAAtB,CAAD,KAAkC;AACrD,MAAIC,iBAAiB,GAAGH,SAAxB;AAEA,sBACE,QAAC,KAAD,OACME,IADN;AAEE,IAAA,MAAM,EAAEE,KAAK,IACXH,IAAI,gBAEE,QAAC,iBAAD,OAAuBG;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,gBAKE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB;AADN;AAAA;AAAA;AAAA;AAAA;AARV;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;KAAMT,Y;AAqBNA,YAAY,CAACU,SAAb,GAAyB;AACvBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBC;AADA,CAAzB;;AAKA,MAAMC,eAAe,GAAIN,KAAD,KAAY;AAClCL,EAAAA,IAAI,EAAEK,KAAK,CAACL;AADsB,CAAZ,CAAxB;;AAGA,eAAeH,UAAU,CAACH,OAAO,CAACiB,eAAD,CAAP,CAAyBb,YAAzB,CAAD,CAAzB","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// const PrivateRoute = ({component:Component, auth, ...rest}) =>(\r\n//     <Route \r\n//         {...rest} \r\n//         render = {props => (\r\n//            auth.isAuthenticated = true ? (\r\n//             <Component {...props} />\r\n//         ):( <Redirect to=\"/login\"/>)\r\n//         )}\r\n//     />\r\n// );\r\n  \r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component, auth, ...rest }) => {\r\n  let ComponentToRender = component;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        auth\r\n          ? (\r\n              <ComponentToRender {...props} />\r\n            )\r\n          : (\r\n              <Redirect\r\n                to={{ pathname: \"/\", state: { from: props.location } }}\r\n              />\r\n            )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n  auth: state.auth \r\n});\r\nexport default withRouter(connect(mapStateToProps)(PrivateRoute));\r\n"]},"metadata":{},"sourceType":"module"}