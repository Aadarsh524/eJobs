{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_ERRORS } from './types';\nexport const getCurrentProfile = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios.get('http://localhost:5000/profile').then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: {}\n  }));\n};\nexport const getAllProfile = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios.get('http://localhost:5000/allProfiles').then(res => dispatch({\n    type: GET_PROFILES,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: {}\n  }));\n};\nexport const setProfileLoading = () => {\n  return {\n    type: PROFILE_LOADING\n  };\n};\nexport const clearCurrentProfile = () => {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  };\n};\nexport const setProfileData = (editProfile, history) => dispatch => {\n  axios.post('http://localhost:5000/profile', editProfile).then(res => history.push(\"/profile\")).catch(err => dispatch({}));\n};\nexport const addExperience = async expData => async dispatch => {\n  await axios.post('http://localhost:5000/addExperience', expData).then(res => alert(\"Data Added\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const addEducation = eduData => async dispatch => {\n  await axios.post('http://localhost:5000/addEducation', eduData).then(res => alert(\"Data Added\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/actions/profileAction.js"],"names":["axios","GET_PROFILE","GET_PROFILES","PROFILE_LOADING","CLEAR_CURRENT_PROFILE","GET_ERRORS","getCurrentProfile","dispatch","setProfileLoading","get","then","res","type","payload","data","catch","err","getAllProfile","clearCurrentProfile","setProfileData","editProfile","history","post","push","addExperience","expData","alert","response","addEducation","eduData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,WADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,qBAJF,EAKEC,UALF,QAMO,SANP;AAUA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAI;AAClDA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAR,EAAAA,KAAK,CAACS,GAAN,CAAU,+BAAV,EACCC,IADD,CACMC,GAAG,IACPJ,QAAQ,CAAC;AACLK,IAAAA,IAAI,EAAEX,WADD;AAELY,IAAAA,OAAO,EAACF,GAAG,CAACG;AAFP,GAAD,CAFV,EAMGC,KANH,CAMSC,GAAG,IACNT,QAAQ,CAAC;AACTK,IAAAA,IAAI,EAAEX,WADG;AAETY,IAAAA,OAAO,EAAC;AAFC,GAAD,CAPd;AAWD,CAbM;AAcP,OAAO,MAAMI,aAAa,GAAG,MAAOV,QAAQ,IAAI;AAC9CA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAR,EAAAA,KAAK,CAACS,GAAN,CAAU,mCAAV,EACCC,IADD,CACMC,GAAG,IACPJ,QAAQ,CAAC;AACLK,IAAAA,IAAI,EAAEV,YADD;AAELW,IAAAA,OAAO,EAACF,GAAG,CAACG;AAFP,GAAD,CAFV,EAMGC,KANH,CAMSC,GAAG,IACNT,QAAQ,CAAC;AACTK,IAAAA,IAAI,EAAEP,UADG;AAETQ,IAAAA,OAAO,EAAC;AAFC,GAAD,CAPd;AAWD,CAbM;AAcP,OAAO,MAAML,iBAAiB,GAAG,MAAK;AACjC,SAAM;AACFI,IAAAA,IAAI,EAAET;AADJ,GAAN;AAGJ,CAJM;AAMP,OAAO,MAAMe,mBAAmB,GAAG,MAAK;AACnC,SAAM;AACFN,IAAAA,IAAI,EAAER;AADJ,GAAN;AAGJ,CAJM;AAMP,OAAO,MAAMe,cAAc,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA2Bd,QAAQ,IAAI;AACnEP,EAAAA,KAAK,CAACsB,IAAN,CAAW,+BAAX,EAA4CF,WAA5C,EACCV,IADD,CACMC,GAAG,IAAGU,OAAO,CAACE,IAAR,CAAa,UAAb,CADZ,EAEER,KAFF,CAEQC,GAAG,IACTT,QAAQ,CAAC,EAAD,CAHV;AAKD,CANM;AAQP,OAAO,MAAMiB,aAAa,GAAG,MAAOC,OAAP,IAAmB,MAAMlB,QAAN,IAAkB;AACjE,QAAMP,KAAK,CACPsB,IADE,CACG,qCADH,EAC0CG,OAD1C,EAEFf,IAFE,CAEGC,GAAG,IAAIe,KAAK,CAAC,YAAD,CAFf,EAGFX,KAHE,CAGIC,GAAG,IACRT,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEP,UADC;AAEPQ,IAAAA,OAAO,EAAEG,GAAG,CAACW,QAAJ,CAAab;AAFf,GAAD,CAJP,CAAN;AASA,CAVM;AAWP,OAAO,MAAMc,YAAY,GAAIC,OAAD,IAAY,MAAMtB,QAAN,IAAkB;AACzD,QAAMP,KAAK,CACPsB,IADE,CACG,oCADH,EACyCO,OADzC,EAEFnB,IAFE,CAEGC,GAAG,IAAIe,KAAK,CAAC,YAAD,CAFf,EAGFX,KAHE,CAGIC,GAAG,IACRT,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEP,UADC;AAEPQ,IAAAA,OAAO,EAAEG,GAAG,CAACW,QAAJ,CAAab;AAFf,GAAD,CAJP,CAAN;AASA,CAVM","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_ERRORS\r\n} from './types';\r\n\r\n\r\n\r\nexport const getCurrentProfile = () =>  dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios.get('http://localhost:5000/profile')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_PROFILE,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        type: GET_PROFILE,\r\n        payload:{}\r\n    }));\r\n};\r\nexport const getAllProfile = () =>  dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios.get('http://localhost:5000/allProfiles')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_PROFILES,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        type: GET_ERRORS,\r\n        payload:{}\r\n    }));\r\n};\r\nexport const setProfileLoading = () =>{\r\n     return{\r\n         type: PROFILE_LOADING\r\n     }\r\n}\r\n\r\nexport const clearCurrentProfile = () =>{\r\n     return{\r\n         type: CLEAR_CURRENT_PROFILE\r\n     }\r\n}\r\n\r\nexport const setProfileData = (editProfile, history) =>  dispatch => {\r\n  axios.post('http://localhost:5000/profile', editProfile)\r\n  .then(res=> history.push(\"/profile\"))\r\n   .catch(err => \r\n    dispatch({\r\n    }))\r\n};\r\n\r\nexport const addExperience = async (expData) => async dispatch => {\r\n await axios\r\n    .post('http://localhost:5000/addExperience', expData)\r\n    .then(res => alert(\"Data Added\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\nexport const addEducation = (eduData) =>async dispatch => {\r\n await axios\r\n    .post('http://localhost:5000/addEducation', eduData)\r\n    .then(res => alert(\"Data Added\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}