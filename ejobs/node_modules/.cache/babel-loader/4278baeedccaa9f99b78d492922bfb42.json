{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\Chat.js\";\nimport React, { Component } from 'react';\nimport \"../../Css/Chat.css\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sendMessage } from '../../actions/messageAction.js';\nimport { FiSend } from \"react-icons/fi\";\nimport { withRouter } from \"react-router-dom\";\nimport isEmpty from '../../validation/isEmpty.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: '',\n      otherPerson: ''\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSendMessageClick(roomname) {\n    const newMessage = {\n      text: this.state.text,\n      otherPerson: roomname\n    };\n    this.props.sendMessage(newMessage);\n    this.setState({\n      text: ''\n    });\n  }\n\n  render() {\n    const {\n      roomname\n    } = this.props.message;\n    const {\n      messages,\n      user,\n      allUsers\n    } = this.props;\n    const {\n      individualProfile,\n      profile\n    } = this.props.profile;\n    let fromPersonAvatar;\n    let otherPersonAvatar;\n\n    if (profile) {\n      fromPersonAvatar = isEmpty(profile.userPhoto) ? \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\" : `http://localhost:5000/images/${profile.userPhoto}`;\n    }\n\n    if (individualProfile) {\n      otherPersonAvatar = isEmpty(individualProfile.userPhoto) ? \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\" : `http://localhost:5000/images/${individualProfile.userPhoto}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: otherPersonAvatar,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 32\n        }, this), allUsers.map((alluser, i) => alluser._id === roomname ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: alluser.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 87\n        }, this) : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageArea\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allMessage\",\n          children: messages.map((message, i) => message.fromPerson === user.user.id && message.otherPerson === roomname ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userMessage\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: fromPersonAvatar,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }, this) : message.otherPerson === user.user.id && message.fromPerson === roomname ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clientMessage\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: otherPersonAvatar,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 61\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"text\",\n            value: this.state.name,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            onClick: this.onSendMessageClick.bind(this, roomname),\n            className: \"sendMsg\",\n            children: /*#__PURE__*/_jsxDEV(FiSend, {\n              style: {\n                color: 'gray',\n                fontSize: 20,\n                marginRight: 25\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 134\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this);\n  }\n\n}\n\nChat.propTypes = {\n  sendMessage: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  message: state.message\n});\n\nexport default connect(mapStateToProps, {\n  sendMessage\n})(withRouter(Chat));","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/Chat.js"],"names":["React","Component","PropTypes","connect","sendMessage","FiSend","withRouter","isEmpty","Chat","constructor","state","text","otherPerson","onChange","bind","e","setState","target","name","value","onSendMessageClick","roomname","newMessage","props","render","message","messages","user","allUsers","individualProfile","profile","fromPersonAvatar","otherPersonAvatar","userPhoto","map","alluser","i","_id","email","fromPerson","id","color","fontSize","marginRight","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAGC,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACxBQ,EAAAA,WAAW,GAAE;AACV;AACG,SAAKC,KAAL,GAAa;AACRC,MAAAA,IAAI,EAAE,EADE;AAERC,MAAAA,WAAW,EAAE;AAFL,KAAb;AAIH,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEFD,EAAAA,QAAQ,CAACE,CAAD,EAAG;AACN,SAAKC,QAAL,CAAc;AAAC,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,KAAd;AACH;;AACAC,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AACf,UAAMC,UAAU,GAAG;AACfX,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADF;AAEfC,MAAAA,WAAW,EAAES;AAFE,KAAnB;AAIX,SAAKE,KAAL,CAAWnB,WAAX,CAAuBkB,UAAvB;AACD,SAAKN,QAAL,CAAc;AAACL,MAAAA,IAAI,EAAE;AAAP,KAAd;AAEM;;AACVa,EAAAA,MAAM,GAAG;AACH,UAAM;AAAEH,MAAAA;AAAF,QAAgB,KAAKE,KAAL,CAAWE,OAAjC;AACF,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAmBC,MAAAA;AAAnB,QAAgC,KAAKL,KAA3C;AAEC,UAAM;AAAEM,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,QAAiC,KAAKP,KAAL,CAAWO,OAAlD;AACC,QAAIC,gBAAJ;AACA,QAAIC,iBAAJ;;AAEE,QAAIF,OAAJ,EAAa;AACbC,MAAAA,gBAAgB,GAAGxB,OAAO,CAACuB,OAAO,CAACG,SAAT,CAAP,GAA6B,mHAA7B,GAAqJ,gCAA+BH,OAAO,CAACG,SAAU,EAAzN;AACD;;AACJ,QAAIJ,iBAAJ,EAAuB;AACrBG,MAAAA,iBAAiB,GAAGzB,OAAO,CAACsB,iBAAiB,CAACI,SAAnB,CAAP,GAAuC,mHAAvC,GAA+J,gCAA+BJ,iBAAiB,CAACI,SAAU,EAA9O;AACE;;AAEH,wBACU;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAES;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAED,iBAAV;AAA6B,UAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEEJ,QAAQ,CAACM,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgBD,OAAO,CAACE,GAAR,KAAgBhB,QAAhB,gBAA4B;AAAA,oBAAKc,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA5B,GAAuD,IAApF,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFT,eAQU;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACK;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACwBZ,QAAQ,CAACQ,GAAT,CAAa,CAACT,OAAD,EAAWW,CAAX,KAClCX,OAAO,CAACc,UAAR,KAAwBZ,IAAI,CAACA,IAAL,CAAUa,EAAlC,IAAwCf,OAAO,CAACb,WAAR,KAAyBS,QAAjE,gBACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACQ;AAAA,wBAAII,OAAO,CAACd;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADR,eAEY;AAAK,cAAA,GAAG,EAAEoB,gBAAV;AAA4B,cAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,GAKoBN,OAAO,CAACb,WAAR,KAAyBe,IAAI,CAACA,IAAL,CAAUa,EAAnC,IAAyCf,OAAO,CAACc,UAAR,KAAwBlB,QAAjE,gBACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACR;AAAK,cAAA,GAAG,EAAEW,iBAAV;AAA6B,cAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADQ,eAEZ;AAAA,wBAAIP,OAAO,CAACd;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFY;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,GAMI,IAZH;AADxB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cARV,eA4BU;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAM,UAAA,YAAY,EAAC,KAAnB;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AACI,YAAA,IAAI,EAAE,MADV;AAEI,YAAA,KAAK,EAAE,KAAKD,KAAL,CAAWQ,IAFtB;AAGI,YAAA,QAAQ,EAAE,KAAKL;AAHnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,OAAO,EAAE,KAAKO,kBAAL,CAAwBN,IAAxB,CAA6B,IAA7B,EAAmCO,QAAnC,CAA9B;AAA4E,YAAA,SAAS,EAAC,SAAtF;AAAA,mCAAiG,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE;AAACoB,gBAAAA,KAAK,EAAE,MAAR;AAAeC,gBAAAA,QAAQ,EAAC,EAAxB;AAA4BC,gBAAAA,WAAW,EAAC;AAAxC;AAAf;AAAA;AAAA;AAAA;AAAA;AAAjG;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BV;AAAA;AAAA;AAAA;AAAA;AAAA,YADV;AA0CH;;AA/EyB;;AAkF9BnC,IAAI,CAACoC,SAAL,GAAiB;AACXxC,EAAAA,WAAW,EAAEF,SAAS,CAAC2C,IAAV,CAAeC,UADjB;AAEfhB,EAAAA,OAAO,EAAE5B,SAAS,CAAC6C,MAAV,CAAiBD;AAFX,CAAjB;;AAMA,MAAME,eAAe,GAAItC,KAAD,KAAY;AAClCoB,EAAAA,OAAO,EAAEpB,KAAK,CAACoB,OADmB;AAG9BL,EAAAA,OAAO,EAAEf,KAAK,CAACe;AAHe,CAAZ,CAAxB;;AAOA,eAAetB,OAAO,CAAC6C,eAAD,EAAkB;AAAE5C,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,UAAU,CAACE,IAAD,CAArD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../../Css/Chat.css\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { sendMessage } from '../../actions/messageAction.js';\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport isEmpty from '../../validation/isEmpty.js';\r\n\r\n\r\n class Chat extends Component {\r\n      constructor(){\r\n         super();\r\n            this.state = {\r\n                 text: '',\r\n                 otherPerson: ''\r\n             };\r\n         this.onChange = this.onChange.bind(this);\r\n     }\r\n\r\n    onChange(e){\r\n         this.setState({[e.target.name]: e.target.value});\r\n     }\r\n      onSendMessageClick(roomname) {  \r\n                    const newMessage = {\r\n                        text: this.state.text,\r\n                        otherPerson: roomname,\r\n         };\r\n         this.props.sendMessage(newMessage);\r\n        this.setState({text: ''});\r\n\r\n             }\r\n    render() {\r\n          const { roomname  } = this.props.message;\r\n        const { messages, user , allUsers } = this.props;\r\n\r\n         const { individualProfile, profile } = this.props.profile; \r\n          let fromPersonAvatar;\r\n          let otherPersonAvatar;\r\n\r\n            if (profile) {\r\n            fromPersonAvatar = isEmpty(profile.userPhoto) ? \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\" : (`http://localhost:5000/images/${profile.userPhoto}`)\r\n          }\r\n       if (individualProfile) {\r\n         otherPersonAvatar = isEmpty(individualProfile.userPhoto) ? \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\" : (`http://localhost:5000/images/${individualProfile.userPhoto}`)\r\n          }\r\n\r\n        return (\r\n                  <div className=\"chat\"> \r\n                  \r\n                           <div className=\"topInfo\">\r\n                               <img src={otherPersonAvatar} alt=\"avatar\"/>\r\n                            {allUsers.map((alluser, i) => alluser._id === roomname ? (<h5>{alluser.email}</h5>):(null))}\r\n                           </div>\r\n\r\n\r\n                            <div className=\"messageArea\">\r\n                                 <div className=\"allMessage\">\r\n                                                        {messages.map((message , i) =>\r\n                                    message.fromPerson ===  user.user.id && message.otherPerson ===  roomname ? (\r\n                                        <div className=\"userMessage\">\r\n                                                <p>{message.text}</p>\r\n                                                    <img src={fromPersonAvatar} alt=\"avatar\"/> \r\n                                                    </div>): (\r\n                                                        message.otherPerson ===  user.user.id && message.fromPerson ===  roomname ? (\r\n                                                            <div className=\"clientMessage\">\r\n                                                    <img src={otherPersonAvatar} alt=\"avatar\"/>\r\n                                                <p>{message.text}</p>\r\n                                                \r\n                                            </div>\r\n                                                        ): (null)))}\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n\r\n                            <div className=\"messageForm\">\r\n                                <form autoComplete=\"off\" >\r\n                                    <input type='text'  \r\n                                        name= 'text'\r\n                                        value={this.state.name} \r\n                                        onChange={this.onChange} \r\n                                        />\r\n                                    <button type=\"reset\" onClick={this.onSendMessageClick.bind(this, roomname)} className=\"sendMsg\" ><FiSend style={{color: 'gray',fontSize:20, marginRight:25}}/></button>\r\n                                </form>\r\n                            </div>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n      sendMessage: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n\r\n      message: state.message\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, { sendMessage  })(withRouter(Chat));\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}