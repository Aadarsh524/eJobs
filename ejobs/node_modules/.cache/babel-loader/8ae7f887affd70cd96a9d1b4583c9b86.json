{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AsFreelancer.js\";\nimport React, { Component } from 'react';\nimport { showAllProject } from '../../actions/projectAction.js';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Project from './Project';\nimport Spinner from '../../Spinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AsFreelancer extends Component {\n  componentDidMount() {\n    this.props.showAllProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.project) {\n      this.setState({\n        project: nextProps.project,\n        auth: nextProps.auth\n      });\n    }\n  }\n\n  render() {\n    const {\n      project,\n      loading\n    } = this.props.project;\n    const {\n      user\n    } = this.props.auth;\n    console.log(project);\n    let Allprojects;\n\n    if (project === null || loading) {\n      Allprojects = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    } else {\n      Allprojects = /*#__PURE__*/_jsxDEV(Project, {\n        project: project,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Allprojects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAsFreelancer.propTypes = {\n  showAllProject: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {\n  showAllProject\n})(AsFreelancer);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AsFreelancer.js"],"names":["React","Component","showAllProject","connect","PropTypes","Project","Spinner","AsFreelancer","componentDidMount","props","componentWillReceiveProps","nextProps","project","setState","auth","render","loading","user","console","log","Allprojects","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAEjCO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWP,cAAX;AACH;;AACCQ,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAC9B,QAAGA,SAAS,CAACC,OAAb,EAAqB;AACjB,WAAKC,QAAL,CAAc;AACVD,QAAAA,OAAO,EAAED,SAAS,CAACC,OADT;AAEVE,QAAAA,IAAI,EAAEH,SAAS,CAACG;AAFN,OAAd;AAKH;AACP;;AAEFC,EAAAA,MAAM,GAAG;AAEJ,UAAM;AAAEH,MAAAA,OAAF;AAAWI,MAAAA;AAAX,QAAuB,KAAKP,KAAL,CAAWG,OAAxC;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,KAAKR,KAAL,CAAWK,IAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACL,QAAIQ,WAAJ;;AAEA,QAAIR,OAAO,KAAK,IAAZ,IAAoBI,OAAxB,EAAiC;AAC/BI,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAd;AACD,KAFD,MAEO;AAEFA,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAS,QAAA,OAAO,EAAER,OAAlB;AAA2B,QAAA,IAAI,EAAEK;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAd;AAGJ;;AAEG,wBACI;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApCgC;;AAsCrCb,YAAY,CAACc,SAAb,GAAyB;AACvBnB,EAAAA,cAAc,EAAEE,SAAS,CAACkB,IAAV,CAAeC,UADR;AAEvBT,EAAAA,IAAI,EAAEV,SAAS,CAACoB,MAAV,CAAiBD,UAFA;AAGvBX,EAAAA,OAAO,EAAER,SAAS,CAACoB,MAAV,CAAiBD;AAHH,CAAzB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ,IADsB;AAElCF,EAAAA,OAAO,EAAEc,KAAK,CAACd;AAFmB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACsB,eAAD,EAAkB;AAAGvB,EAAAA;AAAH,CAAlB,CAAP,CAA8CK,YAA9C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { showAllProject } from '../../actions/projectAction.js'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Project from './Project';\r\nimport Spinner from '../../Spinner.js'\r\n\r\nclass AsFreelancer extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.showAllProject();\r\n    }\r\n      componentWillReceiveProps(nextProps){\r\n            if(nextProps.project){\r\n                this.setState({\r\n                    project: nextProps.project,\r\n                    auth: nextProps.auth\r\n\r\n                });\r\n            }\r\n     }\r\n\r\n    render() {\r\n       \r\n         const { project, loading } = this.props.project;\r\n         const { user } = this.props.auth;\r\n         console.log(project)\r\n    let Allprojects;\r\n\r\n    if (project === null || loading) {\r\n      Allprojects = <Spinner />;\r\n    } else {\r\n       \r\n         Allprojects = <Project project={project} user={user}/>;\r\n     \r\n     \r\n    }\r\n     \r\n        return (\r\n            <div>\r\n                {Allprojects}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAsFreelancer.propTypes = {\r\n  showAllProject: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  project: state.project\r\n});\r\nexport default connect(mapStateToProps, {  showAllProject })(AsFreelancer);\r\n"]},"metadata":{},"sourceType":"module"}