{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AsClient.js\";\nimport React, { Component } from 'react';\nimport { showAllProject } from '../../actions/projectAction.js';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Project from './Project';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AsClient extends Component {\n  constructor() {\n    super();\n    this.state = {\n      project: [] // just update null string to array\n\n    };\n  }\n\n  componentDidMount() {\n    this.props.showAllProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.project) {\n      this.setState({\n        project: nextProps.project\n      });\n    }\n  }\n\n  render() {\n    // const { project } = this.props.project;\n    const display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Project, {\n        project: this.state.project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAsClient.propTypes = {\n  showAllProject: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {\n  showAllProject\n})(AsClient);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AsClient.js"],"names":["React","Component","showAllProject","connect","PropTypes","Project","AsClient","constructor","state","project","componentDidMount","props","componentWillReceiveProps","nextProps","setState","render","display","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAc;AACZC,MAAAA,OAAO,EAAE,EADG,CACE;;AADF,KAAd;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWT,cAAX;AACH;;AACAU,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAC7B,QAAGA,SAAS,CAACJ,OAAb,EAAqB;AACjB,WAAKK,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAEI,SAAS,CAACJ;AADT,OAAd;AAGH;AACP;;AAEFM,EAAAA,MAAM,GAAG;AACL;AAEA,UAAMC,OAAO,gBACT;AAAA,6BAMI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADJ;;AAWA,wBACI;AAAA,gBACAO;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtC4B;;AAwCjCV,QAAQ,CAACW,SAAT,GAAqB;AACnBf,EAAAA,cAAc,EAAEE,SAAS,CAACc,IAAV,CAAeC,UADZ;AAEnBC,EAAAA,IAAI,EAAEhB,SAAS,CAACiB,MAAV,CAAiBF,UAFJ;AAGnBV,EAAAA,OAAO,EAAEL,SAAS,CAACiB,MAAV,CAAiBF;AAHP,CAArB;;AAMA,MAAMG,eAAe,GAAId,KAAD,KAAY;AAClCY,EAAAA,IAAI,EAAEZ,KAAK,CAACY,IADsB;AAElCX,EAAAA,OAAO,EAAED,KAAK,CAACC;AAFmB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACmB,eAAD,EAAkB;AAAGpB,EAAAA;AAAH,CAAlB,CAAP,CAA8CI,QAA9C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { showAllProject } from '../../actions/projectAction.js'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Project from './Project';\r\n\r\nclass AsClient extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = ({\r\n        project: []   // just update null string to array\r\n      });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.showAllProject();\r\n    }\r\n     componentWillReceiveProps(nextProps){\r\n            if(nextProps.project){\r\n                this.setState({\r\n                    project: nextProps.project\r\n                });\r\n            }\r\n     }\r\n\r\n    render() {\r\n        // const { project } = this.props.project;\r\n         \r\n        const display = (\r\n            <div>\r\n                {/* <ul>\r\n                  {project.map( item => \r\n                    <li key={item.id}>{item.projectTitle}</li>\r\n                  )}\r\n                </ul> */}\r\n                <Project project={this.state.project}/>\r\n      </div>\r\n        ) \r\n     \r\n        return (\r\n            <div>\r\n           {display}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAsClient.propTypes = {\r\n  showAllProject: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  project: state.project\r\n});\r\nexport default connect(mapStateToProps, {  showAllProject })(AsClient);\r\n"]},"metadata":{},"sourceType":"module"}