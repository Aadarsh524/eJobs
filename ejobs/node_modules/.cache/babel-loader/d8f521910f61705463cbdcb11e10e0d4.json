{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AsClient.js\";\nimport React, { Component } from 'react';\nimport { getClientProject } from '../../actions/projectAction.js';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Project from './Project';\nimport \"../../Css/AsClient.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AsClient extends Component {\n  componentDidMount() {\n    this.props.getClientProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      clientProject: nextProps.clientProject\n    });\n  }\n\n  render() {\n    const {\n      projectSkills\n    } = this.props.clientProject;\n    console.log(projectSkills);\n    let ProjectData;\n    ProjectData = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ProjectData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAsClient.propTypes = {\n  getClientProject: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  clientProject: state.clientProject\n});\n\nexport default connect(mapStateToProps, {\n  getClientProject\n})(AsClient);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AsClient.js"],"names":["React","Component","getClientProject","connect","PropTypes","Project","AsClient","componentDidMount","props","componentWillReceiveProps","nextProps","setState","clientProject","render","projectSkills","console","log","ProjectData","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWN,gBAAX;AAEH;;AACAO,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AACzB,SAAKC,QAAL,CAAc;AACTC,MAAAA,aAAa,EAAEF,SAAS,CAACE;AADhB,KAAd;AAIV;;AAEFC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKN,KAAL,CAAWI,aAArC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,QAAIG,WAAJ;AAGMA,IAAAA,WAAW,gBACE;AAAA;AAAA;AAAA;AAAA,YADb;AAUN,wBACI;AAAA,gBACKA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAlC4B;;AAoCjCX,QAAQ,CAACY,SAAT,GAAqB;AACnBhB,EAAAA,gBAAgB,EAAEE,SAAS,CAACe,IAAV,CAAeC;AADd,CAArB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,aAAa,EAAEU,KAAK,CAACV;AADa,CAAZ,CAAxB;;AAGA,eAAeT,OAAO,CAACkB,eAAD,EAAkB;AAAGnB,EAAAA;AAAH,CAAlB,CAAP,CAAgDI,QAAhD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { getClientProject } from '../../actions/projectAction.js'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Project from './Project';\r\nimport \"../../Css/AsClient.css\"\r\n\r\nclass AsClient extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getClientProject();\r\n           \r\n    }\r\n     componentWillReceiveProps(nextProps){   \r\n                this.setState({\r\n                     clientProject: nextProps.clientProject\r\n                });\r\n                \r\n     }\r\n \r\n    render() {\r\n        const { projectSkills } = this.props.clientProject;\r\n        console.log(projectSkills)\r\n        let ProjectData;\r\n\r\n        \r\n              ProjectData = (\r\n                           <div>\r\n                            {/* <Project project={clientProject}/> */}\r\n                         </div>\r\n         )\r\n        \r\n          \r\n     \r\n\r\n     \r\n        return (\r\n            <div>\r\n                {ProjectData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAsClient.propTypes = {\r\n  getClientProject: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  clientProject: state.clientProject\r\n});\r\nexport default connect(mapStateToProps, {  getClientProject })(AsClient);\r\n"]},"metadata":{},"sourceType":"module"}