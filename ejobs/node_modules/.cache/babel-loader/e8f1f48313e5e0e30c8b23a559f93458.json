{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport \"../../Css/Dashboard.css\";\nimport { connect } from 'react-redux';\nimport NavName from './NavName';\nimport Project from './Project';\nimport Spinner from '../../Spinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.project) {\n      this.setState({\n        project: nextProps.project\n      });\n    }\n  }\n\n  render() {\n    const {\n      project,\n      loading\n    } = this.props.project;\n    let Allprojects;\n\n    if (project === null || loading) {\n      Allprojects = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    } else {\n      Allprojects = /*#__PURE__*/_jsxDEV(Project, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this);\n    } //  const { project } = this.props.project;\n    // const display = (\n    //     <div>\n    //         <Project project={project}/>\n    //     </div>\n    // ); \n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(NavName, {\n        pageName: \"DashBoard\",\n        pageDescription: \"See all the project listed on eJob. And Apply.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashBoard_body\",\n        children: display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {})(Dashboard);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/Dashboard.js"],"names":["React","Component","connect","NavName","Project","Spinner","Dashboard","componentWillReceiveProps","nextProps","project","setState","render","loading","props","Allprojects","display","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEC,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAI9BM,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAC7B,QAAGA,SAAS,CAACC,OAAb,EAAqB;AACjB,WAAKC,QAAL,CAAc;AACVD,QAAAA,OAAO,EAAED,SAAS,CAACC;AADT,OAAd;AAGH;AACP;;AAEFE,EAAAA,MAAM,GAAG;AAEJ,UAAM;AAAEF,MAAAA,OAAF;AAAWG,MAAAA;AAAX,QAAuB,KAAKC,KAAL,CAAWJ,OAAxC;AACL,QAAIK,WAAJ;;AAEA,QAAIL,OAAO,KAAK,IAAZ,IAAoBG,OAAxB,EAAiC;AAC/BE,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,gBAAG,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAd;AACD,KATQ,CAWL;AAEA;AACA;AACA;AACA;AACA;;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,WAAlB;AAA8B,QAAA,eAAe,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACKM;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAtC8B;;AAyCnC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADsB;AAElCT,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFmB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACc,eAAD,EAAkB,EAAlB,CAAP,CAA+BV,SAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../../Css/Dashboard.css\";\r\nimport { connect } from 'react-redux';\r\nimport NavName from './NavName'\r\nimport Project from './Project';\r\nimport Spinner from '../../Spinner.js'\r\n\r\n class Dashboard extends Component {\r\n   \r\n\r\n\r\n     componentWillReceiveProps(nextProps){\r\n            if(nextProps.project){\r\n                this.setState({\r\n                    project: nextProps.project\r\n                });\r\n            }\r\n     }\r\n \r\n    render() {\r\n\r\n         const { project, loading } = this.props.project;\r\n    let Allprojects;\r\n\r\n    if (project === null || loading) {\r\n      Allprojects = <Spinner />;\r\n    } else {\r\n      Allprojects = <Project project={project} />;\r\n    }\r\n        \r\n        //  const { project } = this.props.project;\r\n         \r\n        // const display = (\r\n        //     <div>\r\n        //         <Project project={project}/>\r\n        //     </div>\r\n        // ); \r\n        return (\r\n            <div className=\"dashboard\">\r\n                <NavName pageName=\"DashBoard\" pageDescription=\"See all the project listed on eJob. And Apply.\"  />\r\n                <div className=\"dashBoard_body\">\r\n                    {display}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  project: state.project\r\n});\r\nexport default connect(mapStateToProps, {  })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}