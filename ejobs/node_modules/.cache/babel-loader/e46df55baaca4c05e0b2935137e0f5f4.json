{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AddExperience.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addExperience } from '../../actions/profileAction';\nimport InputField from '../../Reusing/InputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddExperience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      company: '',\n      job: '',\n      location: '',\n      from: '',\n      to: '',\n      current: false,\n      errors: {},\n      disabled: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onCheck = this.onCheck.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const expData = {\n      company: this.state.company,\n      job: this.state.job,\n      location: this.state.location,\n      from: this.state.from,\n      to: this.state.to,\n      current: this.state.current,\n      description: this.state.description\n    };\n    this.props.addExperience(expData);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onCheck(e) {\n    this.setState({\n      disabled: !this.state.disabled,\n      current: !this.state.current\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detailCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Work Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fieldGroup\",\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: \"Company\",\n              type: \"text\",\n              name: \"company\",\n              value: this.state.name,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: \"Job\",\n              type: \"text\",\n              name: \"job\",\n              value: this.state.name,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: \"Location\",\n              type: \"text\",\n              name: \"location\",\n              value: this.state.name,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: \"From Date\",\n              type: \"date\",\n              name: \"from\",\n              value: this.state.name,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: \"Current\",\n              type: \"checkBox\",\n              name: \"currentExp\",\n              value: this.state.name,\n              onChange: this.onCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: \"To Date\",\n              type: \"date\",\n              name: \"to\",\n              value: this.state.name,\n              onChange: this.onChange,\n              disabled: this.state.disabled ? 'disabled' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addExperience\n})(AddExperience);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AddExperience.js"],"names":["React","Component","connect","PropTypes","addExperience","InputField","AddExperience","constructor","props","state","company","job","location","from","to","current","errors","disabled","onChange","bind","onSubmit","onCheck","componentWillReceiveProps","nextProps","setState","e","preventDefault","expData","description","target","name","value","render","propTypes","func","isRequired","profile","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,UAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,GAAG,EAAE,EAFM;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,EAAE,EAAE,EALO;AAMXC,MAAAA,OAAO,EAAE,KANE;AAOXC,MAAAA,MAAM,EAAE,EAPG;AAQXC,MAAAA,QAAQ,EAAE;AARC,KAAb;AAWA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDG,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACP,MAAd,EAAsB;AACpB,WAAKQ,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEO,SAAS,CAACP;AAApB,OAAd;AACD;AACF;;AAEDI,EAAAA,QAAQ,CAACK,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG;AACdjB,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADN;AAEdC,MAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAFF;AAGdC,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAHP;AAIdC,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAJH;AAKdC,MAAAA,EAAE,EAAE,KAAKL,KAAL,CAAWK,EALD;AAMdC,MAAAA,OAAO,EAAE,KAAKN,KAAL,CAAWM,OANN;AAOda,MAAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWmB;AAPV,KAAhB;AAUA,SAAKpB,KAAL,CAAWJ,aAAX,CAAyBuB,OAAzB;AACD;;AAEDT,EAAAA,QAAQ,CAACO,CAAD,EAAI;AACV,SAAKD,QAAL,CAAc;AAAE,OAACC,CAAC,CAACI,MAAF,CAASC,IAAV,GAAiBL,CAAC,CAACI,MAAF,CAASE;AAA5B,KAAd;AACD;;AAEDV,EAAAA,OAAO,CAACI,CAAD,EAAI;AACT,SAAKD,QAAL,CAAc;AACZP,MAAAA,QAAQ,EAAE,CAAC,KAAKR,KAAL,CAAWQ,QADV;AAEZF,MAAAA,OAAO,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAFT,KAAd;AAID;;AAEDiB,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAE,KAAKZ,QAArB;AAAA,+BACQ;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,eAEgB;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI,QAAC,UAAD;AACQ,cAAA,SAAS,EAAC,SADlB;AAEQ,cAAA,IAAI,EAAC,MAFb;AAEqB,cAAA,IAAI,EAAC,SAF1B;AAGQ,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWqB,IAH1B;AAIQ,cAAA,QAAQ,EAAE,KAAKZ;AAJvB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,UAAD;AACQ,cAAA,SAAS,EAAC,KADlB;AAEQ,cAAA,IAAI,EAAC,MAFb;AAEqB,cAAA,IAAI,EAAC,KAF1B;AAGQ,cAAA,KAAK,EAAE,KAAKT,KAAL,CAAWqB,IAH1B;AAIQ,cAAA,QAAQ,EAAE,KAAKZ;AAJvB;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWK,QAAC,UAAD;AACO,cAAA,SAAS,EAAC,UADjB;AAEO,cAAA,IAAI,EAAC,MAFZ;AAEoB,cAAA,IAAI,EAAC,UAFzB;AAGO,cAAA,KAAK,EAAE,KAAKT,KAAL,CAAWqB,IAHzB;AAIO,cAAA,QAAQ,EAAE,KAAKZ;AAJtB;AAAA;AAAA;AAAA;AAAA,oBAXL,eAgBK,QAAC,UAAD;AACO,cAAA,SAAS,EAAC,WADjB;AAEO,cAAA,IAAI,EAAC,MAFZ;AAEoB,cAAA,IAAI,EAAC,MAFzB;AAGO,cAAA,KAAK,EAAE,KAAKT,KAAL,CAAWqB,IAHzB;AAIO,cAAA,QAAQ,EAAE,KAAKZ;AAJtB;AAAA;AAAA;AAAA;AAAA,oBAhBL,eAqBI,QAAC,UAAD;AACQ,cAAA,SAAS,EAAC,SADlB;AAEQ,cAAA,IAAI,EAAC,UAFb;AAEyB,cAAA,IAAI,EAAC,YAF9B;AAGQ,cAAA,KAAK,EAAE,KAAKT,KAAL,CAAWqB,IAH1B;AAIQ,cAAA,QAAQ,EAAE,KAAKT;AAJvB;AAAA;AAAA;AAAA;AAAA,oBArBJ,eA0BI,QAAC,UAAD;AACQ,cAAA,SAAS,EAAC,SADlB;AAEQ,cAAA,IAAI,EAAC,MAFb;AAEqB,cAAA,IAAI,EAAC,IAF1B;AAGQ,cAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWqB,IAH1B;AAIQ,cAAA,QAAQ,EAAE,KAAKZ,QAJvB;AAKQ,cAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWQ,QAAX,GAAsB,UAAtB,GAAmC;AALrD;AAAA;AAAA;AAAA;AAAA,oBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA2CD;;AAjGmC;;AAoGtCX,aAAa,CAAC2B,SAAd,GAA0B;AACxB7B,EAAAA,aAAa,EAAED,SAAS,CAAC+B,IAAV,CAAeC,UADN;AAExBC,EAAAA,OAAO,EAAEjC,SAAS,CAACkC,MAAV,CAAiBF,UAFF;AAGxBnB,EAAAA,MAAM,EAAEb,SAAS,CAACkC,MAAV,CAAiBF;AAHD,CAA1B;;AAMA,MAAMG,eAAe,GAAG7B,KAAK,KAAK;AAChC2B,EAAAA,OAAO,EAAE3B,KAAK,CAAC2B,OADiB;AAEhCpB,EAAAA,MAAM,EAAEP,KAAK,CAACO;AAFkB,CAAL,CAA7B;;AAKA,eAAed,OAAO,CAACoC,eAAD,EAAkB;AAAElC,EAAAA;AAAF,CAAlB,CAAP,CACbE,aADa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addExperience } from '../../actions/profileAction';\r\nimport InputField  from '../../Reusing/InputField'\r\n\r\nclass AddExperience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      company: '',\r\n      job: '',\r\n      location: '',\r\n      from: '',\r\n      to: '',\r\n      current: false,\r\n      errors: {},\r\n      disabled: false\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onCheck = this.onCheck.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const expData = {\r\n      company: this.state.company,\r\n      job: this.state.job,\r\n      location: this.state.location,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      current: this.state.current,\r\n      description: this.state.description\r\n    };\r\n\r\n    this.props.addExperience(expData);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onCheck(e) {\r\n    this.setState({\r\n      disabled: !this.state.disabled,\r\n      current: !this.state.current\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <form onSubmit={this.onSubmit}>\r\n                    <div className=\"detailCard\">\r\n                                    <h2>Work Experience</h2>\r\n                                    <div className=\"fieldGroup\">\r\n                                        <InputField \r\n                                                fieldName=\"Company\" \r\n                                                type=\"text\"  name=\"company\"\r\n                                                value={this.state.name} \r\n                                                onChange={this.onChange}/>\r\n                                        <InputField \r\n                                                fieldName=\"Job\" \r\n                                                type=\"text\"  name=\"job\"\r\n                                                value={this.state.name} \r\n                                                onChange={this.onChange}/>\r\n                                         <InputField \r\n                                                fieldName=\"Location\" \r\n                                                type=\"text\"  name=\"location\"\r\n                                                value={this.state.name} \r\n                                                onChange={this.onChange}/>\r\n                                         <InputField \r\n                                                fieldName=\"From Date\" \r\n                                                type=\"date\"  name=\"from\"\r\n                                                value={this.state.name} \r\n                                                onChange={this.onChange}/>\r\n                                        <InputField \r\n                                                fieldName=\"Current\" \r\n                                                type=\"checkBox\"  name=\"currentExp\"\r\n                                                value={this.state.name} \r\n                                                onChange={this.onCheck}/>\r\n                                        <InputField \r\n                                                fieldName=\"To Date\" \r\n                                                type=\"date\"  name=\"to\"\r\n                                                value={this.state.name} \r\n                                                onChange={this.onChange}\r\n                                                disabled={this.state.disabled ? 'disabled' : ''}/>\r\n                                    </div>\r\n                                </div>\r\n            </form>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addExperience })(\r\n  AddExperience\r\n);"]},"metadata":{},"sourceType":"module"}