{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROJECT, PROJECT_LOADING, GET_CLIENT_PROJECT, GET_ERRORS, DELETE_PROJECT, GET_APPLIED_PROJECT } from './types';\nexport const postProject = (newProject, history) => dispatch => {\n  axios.post('http://localhost:5000/project', newProject).then(res => history.push(\"/\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const showAllProject = () => dispatch => {\n  dispatch(setProjectLoading());\n  axios.get('http://localhost:5000/project').then(res => dispatch({\n    type: GET_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.res\n  }));\n};\nexport const getClientProject = () => dispatch => {\n  axios.get('http://localhost:5000/clientProject').then(res => dispatch({\n    type: GET_CLIENT_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const getAppliedProject = () => dispatch => {\n  axios.get('http://localhost:5000/appliedProject').then(res => dispatch({\n    type: GET_APPLIED_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response\n  }));\n};\nexport const setProjectLoading = () => {\n  return {\n    type: PROJECT_LOADING\n  };\n};\nexport const deleteProject = id => dispatch => {\n  axios.delete(`http://localhost:5000/applyProject/${id}`).then(res => dispatch({\n    type: DELETE_PROJECT,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const applyOnProject = id => dispatch => {\n  axios.post('http://localhost:5000/applyProject', id).then(res => dispatch({})).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response\n  }));\n};","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/actions/projectAction.js"],"names":["axios","GET_PROJECT","PROJECT_LOADING","GET_CLIENT_PROJECT","GET_ERRORS","DELETE_PROJECT","GET_APPLIED_PROJECT","postProject","newProject","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","showAllProject","setProjectLoading","get","getClientProject","getAppliedProject","deleteProject","id","delete","applyOnProject"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  GET_PROJECT,\r\n  PROJECT_LOADING,\r\n  GET_CLIENT_PROJECT,\r\n  GET_ERRORS,\r\n  DELETE_PROJECT,\r\n  GET_APPLIED_PROJECT\r\n} from './types';\r\n\r\n\r\n\r\nexport const postProject = (newProject, history) =>  dispatch => {\r\n  axios.post('http://localhost:5000/project', newProject)\r\n  .then(res=> history.push(\"/\"))\r\n   .catch(err => \r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload:err.response.data\r\n    }))\r\n};\r\n\r\n\r\nexport const showAllProject = () =>  dispatch => {\r\n  dispatch(setProjectLoading());\r\n  axios.get('http://localhost:5000/project')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_PROJECT,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n          type: GET_ERRORS,\r\n        payload:err.res\r\n        }));\r\n};\r\n\r\nexport const getClientProject = () =>  dispatch => {\r\n  axios.get('http://localhost:5000/clientProject')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_CLIENT_PROJECT,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({}));\r\n};\r\nexport const getAppliedProject = () =>  dispatch => {\r\n  axios.get('http://localhost:5000/appliedProject')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_APPLIED_PROJECT,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response\r\n      }));\r\n};\r\n\r\nexport const setProjectLoading = () =>{\r\n     return{\r\n         type: PROJECT_LOADING\r\n     }\r\n}\r\n\r\nexport const deleteProject = (id) => dispatch => {\r\n  axios\r\n     .delete(`http://localhost:5000/applyProject/${id}`)\r\n     .then(res =>\r\n      dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const applyOnProject = (id) => dispatch => {\r\n  axios\r\n    .post('http://localhost:5000/applyProject', id)\r\n     .then(res =>\r\n      dispatch({\r\n      \r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response\r\n      })\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}