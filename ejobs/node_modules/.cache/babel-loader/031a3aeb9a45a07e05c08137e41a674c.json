{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AsClient.js\";\nimport React, { Component } from 'react';\nimport { showAllProject } from '../../actions/projectAction.js';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Project from './Project.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AsClient extends Component {\n  componentDidMount() {\n    this.props.showAllProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        project: nextProps.projects\n      });\n    }\n  }\n\n  render() {\n    const {\n      project\n    } = this.props;\n\n    const content = project => /*#__PURE__*/_jsxDEV(Project, {\n      projectTitle: project.projectTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAsClient.propTypes = {\n  showAllProject: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {\n  showAllProject\n})(AsClient);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AsClient.js"],"names":["React","Component","showAllProject","connect","PropTypes","Project","AsClient","componentDidMount","props","componentWillReceiveProps","nextProps","errors","setState","project","projects","render","content","projectTitle","propTypes","func","isRequired","auth","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;;;AACA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWN,cAAX;AACH;;AACAO,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAC7B,QAAGA,SAAS,CAACC,MAAb,EAAoB;AAChB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEH,SAAS,CAACI;AADT,OAAd;AAGH;AACP;;AAEFC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAa,KAAKL,KAAxB;;AAGP,UAAMQ,OAAO,GAAGH,OAAO,iBACtB,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEA,OAAO,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,YADD;;AAIO,wBACI;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA1B4B;;AA4BjCV,QAAQ,CAACY,SAAT,GAAqB;AACnBhB,EAAAA,cAAc,EAAEE,SAAS,CAACe,IAAV,CAAeC,UADZ;AAEnBC,EAAAA,IAAI,EAAEjB,SAAS,CAACkB,MAAV,CAAiBF,UAFJ;AAGnBP,EAAAA,OAAO,EAAET,SAAS,CAACkB,MAAV,CAAiBF;AAHP,CAArB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,IAAI,EAAEG,KAAK,CAACH,IADsB;AAElCR,EAAAA,OAAO,EAAEW,KAAK,CAACX;AAFmB,CAAZ,CAAxB;;AAIA,eAAeV,OAAO,CAACoB,eAAD,EAAkB;AAAGrB,EAAAA;AAAH,CAAlB,CAAP,CAA8CI,QAA9C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { showAllProject } from '../../actions/projectAction.js'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Project from './Project.js'\r\nclass AsClient extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.showAllProject();\r\n    }\r\n     componentWillReceiveProps(nextProps){\r\n            if(nextProps.errors){\r\n                this.setState({\r\n                    project: nextProps.projects\r\n                });\r\n            }\r\n     }\r\n\r\n    render() {\r\n        const { project} = this.props;\r\n\r\n\r\n const content = project =>\r\n  <Project projectTitle={project.projectTitle}/>\r\n\r\n     \r\n        return (\r\n            <div>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAsClient.propTypes = {\r\n  showAllProject: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  project: state.project\r\n});\r\nexport default connect(mapStateToProps, {  showAllProject })(AsClient);\r\n"]},"metadata":{},"sourceType":"module"}