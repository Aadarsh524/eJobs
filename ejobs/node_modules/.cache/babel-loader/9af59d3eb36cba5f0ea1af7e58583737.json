{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => auth.isAuthenticated === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  pure: false\n})(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","component","Component","auth","rest","props","isAuthenticated","pathname","state","from","location","propTypes","object","isRequired","mapStateToProps","pure"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAACC,SAAX;AAAsBC,EAAAA,IAAtB;AAA4B,KAAGC;AAA/B,CAAD,kBACjB,QAAC,KAAD,OACQA,IADR;AAEI,EAAA,MAAM,EAAIC,KAAK,IACZF,IAAI,CAACG,eAAL,KAAyB,IAAzB,gBACC,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,UADD,gBAEC,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACdE,MAAAA,QAAQ,EAAE,QADI;AAEdC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFO;AAAd;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMV,Y;AAeNA,YAAY,CAACW,SAAb,GAAyB;AACvBR,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,eAAe,GAAIN,KAAD,KAAY;AAClCL,EAAAA,IAAI,EAAEK,KAAK,CAACL;AADsB,CAAZ,CAAxB;;AAGA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AACtCC,EAAAA,IAAI,EAAE;AADgC,CAAlB,CAAP,CAEZf,YAFY,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({component:Component, auth, ...rest}) =>(\r\n    <Route \r\n        {...rest} \r\n        render = {props => (\r\n           auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n        ):( <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: props.location }\r\n        }} />)\r\n        )}\r\n    />\r\n);\r\n  \r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  pure: false,\r\n})(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}