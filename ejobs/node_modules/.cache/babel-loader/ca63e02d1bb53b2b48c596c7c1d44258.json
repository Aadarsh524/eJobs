{"ast":null,"code":"import axios from 'axios';\nimport { GET_MESSAGES, MESSAGE_LOADING, GET_MESSAGE_ROOMS } from '../actions/types';\nexport const makeChat = (otherPerson, history) => dispatch => {\n  axios.post(\"http://localhost:5000/makeChat\", otherPerson).then(res => history.redirect('/inbox')).catch(err => dispatch({}));\n};\nexport const sendMessage = (otherPerson, text) => dispatch => {\n  axios.post(\"http://localhost:5000/sendMessage\", otherPerson, text).then(res => dispatch({})).catch(err => dispatch({}));\n};\nexport const getAllMessages = id => dispatch => {\n  dispatch(setMessageLoading());\n  axios.get(`http://localhost:5000/getAllMessages/${id}`).then(res => dispatch({\n    type: GET_MESSAGES,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const getUserRooms = () => dispatch => {\n  dispatch(setMessageLoading());\n  axios.get('http://localhost:5000/getUserRooms').then(res => dispatch({\n    type: GET_MESSAGE_ROOMS,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const setMessageLoading = () => {\n  return {\n    type: MESSAGE_LOADING\n  };\n};","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/actions/messageAction.js"],"names":["axios","GET_MESSAGES","MESSAGE_LOADING","GET_MESSAGE_ROOMS","makeChat","otherPerson","history","dispatch","post","then","res","redirect","catch","err","sendMessage","text","getAllMessages","id","setMessageLoading","get","type","payload","data","getUserRooms"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,YADF,EAEEC,eAFF,EAGEC,iBAHF,QAIO,kBAJP;AAQA,OAAO,MAAMC,QAAQ,GAAG,CAACC,WAAD,EAAeC,OAAf,KAA4BC,QAAQ,IAAI;AAC9DP,EAAAA,KAAK,CAACQ,IAAN,CAAW,gCAAX,EAA6CH,WAA7C,EACCI,IADD,CACMC,GAAG,IAAIJ,OAAO,CAACK,QAAR,CAAiB,QAAjB,CADb,EAEGC,KAFH,CAESC,GAAG,IACNN,QAAQ,CAAC,EAAD,CAHd;AAKD,CANM;AAQP,OAAO,MAAMO,WAAW,GAAG,CAACT,WAAD,EAAaU,IAAb,KAAuBR,QAAQ,IAAI;AAC5DP,EAAAA,KAAK,CAACQ,IAAN,CAAW,mCAAX,EAAgDH,WAAhD,EAA4DU,IAA5D,EACCN,IADD,CACMC,GAAG,IACNH,QAAQ,CAAC,EAAD,CAFX,EAKEK,KALF,CAKQC,GAAG,IACTN,QAAQ,CAAC,EAAD,CANV;AASD,CAVM;AAaP,OAAO,MAAMS,cAAc,GAAIC,EAAD,IAASV,QAAQ,IAAI;AACjDA,EAAAA,QAAQ,CAACW,iBAAiB,EAAlB,CAAR;AACAlB,EAAAA,KAAK,CAACmB,GAAN,CAAW,wCAAuCF,EAAG,EAArD,EACCR,IADD,CACMC,GAAG,IACPH,QAAQ,CAAC;AACLa,IAAAA,IAAI,EAAEnB,YADD;AAELoB,IAAAA,OAAO,EAACX,GAAG,CAACY;AAFP,GAAD,CAFV,EAMGV,KANH,CAMSC,GAAG,IACNN,QAAQ,CAAC,EAAD,CAPd;AASD,CAXM;AAcP,OAAO,MAAMgB,YAAY,GAAG,MAAOhB,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACW,iBAAiB,EAAlB,CAAR;AACAlB,EAAAA,KAAK,CAACmB,GAAN,CAAU,oCAAV,EACCV,IADD,CACMC,GAAG,IACPH,QAAQ,CAAC;AACLa,IAAAA,IAAI,EAAEjB,iBADD;AAELkB,IAAAA,OAAO,EAACX,GAAG,CAACY;AAFP,GAAD,CAFV,EAMGV,KANH,CAMSC,GAAG,IACNN,QAAQ,CAAC,EAAD,CAPd;AASD,CAXM;AAYP,OAAO,MAAMW,iBAAiB,GAAG,MAAK;AACjC,SAAM;AACFE,IAAAA,IAAI,EAAElB;AADJ,GAAN;AAGJ,CAJM","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n  GET_MESSAGES,\r\n  MESSAGE_LOADING,\r\n  GET_MESSAGE_ROOMS\r\n} from '../actions/types';\r\n\r\n\r\n\r\nexport const makeChat = (otherPerson , history) =>  dispatch => {\r\n  axios.post(\"http://localhost:5000/makeChat\" ,otherPerson)\r\n  .then(res => history.redirect('/inbox'))\r\n    .catch(err => \r\n        dispatch({\r\n        }));\r\n};\r\n\r\nexport const sendMessage = (otherPerson,text) =>  dispatch => {\r\n  axios.post(\"http://localhost:5000/sendMessage\" ,otherPerson,text)\r\n  .then(res=> \r\n     dispatch({\r\n      \r\n    }))\r\n   .catch(err => \r\n    dispatch({\r\n\r\n    }))\r\n};\r\n\r\n\r\nexport const getAllMessages = (id) =>  dispatch => {\r\n  dispatch(setMessageLoading());\r\n  axios.get(`http://localhost:5000/getAllMessages/${id}`)\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_MESSAGES,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        }));\r\n};\r\n\r\n\r\nexport const getUserRooms = () =>  dispatch => {\r\n  dispatch(setMessageLoading());\r\n  axios.get('http://localhost:5000/getUserRooms')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_MESSAGE_ROOMS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        }));\r\n};\r\nexport const setMessageLoading = () =>{\r\n     return{\r\n         type: MESSAGE_LOADING\r\n     }\r\n}"]},"metadata":{},"sourceType":"module"}