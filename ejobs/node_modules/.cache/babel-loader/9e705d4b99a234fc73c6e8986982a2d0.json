{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\Applicants.js\";\nimport React, { Component } from 'react';\nimport \"../../Css/Profile.css\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getClientProject } from '../../actions/projectAction.js';\nimport Spinner from '../../Spinner.js';\nimport Applicant from './Applicant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Applicants extends Component {\n  componentDidMount() {\n    this.props.getClientProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      project: nextProps.project\n    });\n  }\n\n  render() {\n    const {\n      clientProject,\n      loading,\n      ProjectID\n    } = this.props.project;\n    console.log(ProjectID);\n    const {\n      user\n    } = this.props.auth;\n    let allApplicant;\n    var clientApplicants = clientProject;\n\n    if (clientApplicants === null || loading) {\n      allApplicant = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 22\n      }, this);\n    } else {\n      allApplicant = /*#__PURE__*/_jsxDEV(Applicant, {\n        ProjectID: ProjectID,\n        project: clientApplicants,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allApplicant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nApplicants.propTypes = {\n  getClientProject: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getClientProject\n})(Applicants);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/Applicants.js"],"names":["React","Component","connect","PropTypes","getClientProject","Spinner","Applicant","Applicants","componentDidMount","props","componentWillReceiveProps","nextProps","setState","project","render","clientProject","loading","ProjectID","console","log","user","auth","allApplicant","clientApplicants","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAUC,gBAAV,QAAkC,gCAAlC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAIC,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAEhCO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,gBAAX;AAEH;;AACDM,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AACxB,SAAKC,QAAL,CAAc;AACTC,MAAAA,OAAO,EAAEF,SAAS,CAACE;AADV,KAAd;AAIV;;AACFC,EAAAA,MAAM,GAAG;AACF,UAAM;AAAEC,MAAAA,aAAF;AAAgBC,MAAAA,OAAhB;AAAyBC,MAAAA;AAAzB,QAAuC,KAAKR,KAAL,CAAWI,OAAxD;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,KAAKX,KAAL,CAAWY,IAA5B;AACP,QAAIC,YAAJ;AACA,QAAIC,gBAAgB,GAAGR,aAAvB;;AACA,QAAIQ,gBAAgB,KAAK,IAArB,IAA6BP,OAAjC,EAA0C;AACxCM,MAAAA,YAAY,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAf;AACD,KAFD,MAEO;AACJA,MAAAA,YAAY,gBAAE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEL,SAAtB;AAAiC,QAAA,OAAO,EAAEM,gBAA1C;AAA6D,QAAA,IAAI,EAAEH;AAAnE;AAAA;AAAA;AAAA;AAAA,cAAd;AACF;;AAEG,wBACI;AAAA,gBACIE;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7B+B;;AAiCpCf,UAAU,CAACiB,SAAX,GAAuB;AAClBpB,EAAAA,gBAAgB,EAAED,SAAS,CAACsB,IAAV,CAAeC,UADf;AAElBL,EAAAA,IAAI,EAAElB,SAAS,CAACwB,MAAV,CAAiBD;AAFL,CAAvB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClChB,EAAAA,OAAO,EAAEgB,KAAK,CAAChB,OADmB;AAElCQ,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFsB,CAAZ,CAAxB;;AAKA,eAAenB,OAAO,CAAC0B,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAAgDG,UAAhD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../../Css/Profile.css\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {  getClientProject } from '../../actions/projectAction.js'\r\nimport Spinner from '../../Spinner.js'\r\nimport Applicant from './Applicant';\r\n\r\n\r\n\r\n class Applicants extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getClientProject();\r\n        \r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n                this.setState({\r\n                     project: nextProps.project,\r\n                });\r\n                \r\n     }\r\n    render() {\r\n           const { clientProject,loading, ProjectID } = this.props.project;\r\n           console.log(ProjectID);\r\n           const { user } = this.props.auth;\r\n    let allApplicant;\r\n    var clientApplicants = clientProject\r\n    if (clientApplicants === null || loading) {\r\n      allApplicant = <Spinner />;\r\n    } else {\r\n       allApplicant =<Applicant ProjectID={ProjectID} project={clientApplicants}  user={user}/>;\r\n    }\r\n          \r\n        return (\r\n            <div >\r\n               {allApplicant}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nApplicants.propTypes = {\r\n     getClientProject: PropTypes.func.isRequired,\r\n     auth: PropTypes.object.isRequired,\r\n  \r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getClientProject  })(Applicants);\r\n"]},"metadata":{},"sourceType":"module"}