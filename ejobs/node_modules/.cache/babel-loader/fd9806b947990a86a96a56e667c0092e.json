{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROJECT, PROJECT_LOADING, GET_CLIENT_PROJECT, GET_ERRORS, DELETE_PROJECT, GET_APPLIED_PROJECT, GET_APPLICANT_LIST } from './types';\nexport const postProject = (newProject, history) => dispatch => {\n  axios.post('http://localhost:5000/project', newProject).then(res => history.push(\"/dashboard\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const showAllProject = () => dispatch => {\n  dispatch(setProjectLoading());\n  axios.get('http://localhost:5000/project').then(res => dispatch({\n    type: GET_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.res\n  }));\n};\nexport const getClientProject = () => dispatch => {\n  axios.get('http://localhost:5000/clientProject').then(res => dispatch({\n    type: GET_CLIENT_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({}));\n};\nexport const getAppliedProject = () => dispatch => {\n  axios.get('http://localhost:5000/appliedProject').then(res => dispatch({\n    type: GET_APPLIED_PROJECT,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response\n  }));\n};\nexport const setProjectLoading = () => {\n  return {\n    type: PROJECT_LOADING\n  };\n};\nexport const deleteProject = id => dispatch => {\n  axios.delete(`http://localhost:5000/deleteProject/${id}`).then(res => console.log(id), dispatch({\n    type: DELETE_PROJECT,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const applyProject = (id, newApplicant, history) => dispatch => {\n  axios.post(`http://localhost:5000/applyProject/${id}`, newApplicant).then(res => history.push(\"/allprojects/asFreelancer\"), alert(\"Applied sucessfully\")).catch(err => dispatch({}));\n};\nexport const applicantList = id => dispatch => {\n  dispatch({\n    type: GET_APPLICANT_LIST,\n    payload: id\n  });\n};","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/actions/projectAction.js"],"names":["axios","GET_PROJECT","PROJECT_LOADING","GET_CLIENT_PROJECT","GET_ERRORS","DELETE_PROJECT","GET_APPLIED_PROJECT","GET_APPLICANT_LIST","postProject","newProject","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","showAllProject","setProjectLoading","get","getClientProject","getAppliedProject","deleteProject","id","delete","console","log","applyProject","newApplicant","alert","applicantList"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  GET_PROJECT,\r\n  PROJECT_LOADING,\r\n  GET_CLIENT_PROJECT,\r\n  GET_ERRORS,\r\n  DELETE_PROJECT,\r\n  GET_APPLIED_PROJECT,\r\n  GET_APPLICANT_LIST\r\n} from './types';\r\n\r\n\r\n\r\nexport const postProject = (newProject, history) =>  dispatch => {\r\n  axios.post('http://localhost:5000/project', newProject)\r\n  .then(res=> history.push(\"/dashboard\"))\r\n   .catch(err => \r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload:err.response.data\r\n    }))\r\n};\r\n\r\n\r\nexport const showAllProject = () =>  dispatch => {\r\n  dispatch(setProjectLoading());\r\n  axios.get('http://localhost:5000/project')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_PROJECT,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n          type: GET_ERRORS,\r\n        payload:err.res\r\n        }));\r\n};\r\n\r\nexport const getClientProject = () =>  dispatch => {\r\n  axios.get('http://localhost:5000/clientProject')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_CLIENT_PROJECT,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({}));\r\n};\r\nexport const getAppliedProject = () =>  dispatch => {\r\n  axios.get('http://localhost:5000/appliedProject')\r\n  .then(res=> \r\n    dispatch({\r\n        type: GET_APPLIED_PROJECT,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => \r\n        dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response\r\n      }));\r\n};\r\n\r\nexport const setProjectLoading = () =>{\r\n     return{\r\n         type: PROJECT_LOADING\r\n     }\r\n}\r\n\r\nexport const deleteProject = (id) => dispatch => {\r\n  axios\r\n     .delete(`http://localhost:5000/deleteProject/${id}`)\r\n     .then(res =>\r\n      console.log(id),\r\n      dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const applyProject = (id,newApplicant,history) => dispatch => {\r\n  axios\r\n     .post(`http://localhost:5000/applyProject/${id}`,newApplicant)\r\n     .then(res =>history.push(\"/allprojects/asFreelancer\"),\r\n     alert(\"Applied sucessfully\")\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n      })\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport const applicantList = (id) => dispatch => {\r\n      dispatch({\r\n        type: GET_APPLICANT_LIST,\r\n        payload: id\r\n      })\r\n};"]},"metadata":{},"sourceType":"module"}