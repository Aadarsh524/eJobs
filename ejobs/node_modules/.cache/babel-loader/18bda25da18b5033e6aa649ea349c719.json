{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport \"../../Css/Profile.css\";\nimport { RiGithubFill } from \"react-icons/ri\";\nimport { FaFacebookF, FaInstagram, FaDribbble, FaUserEdit } from \"react-icons/fa\";\nimport { AiOutlineLinkedin } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCurrentProfile } from '../../actions/profileAction.js';\nimport NavName from './NavName';\nimport Experience from './Experience';\nimport Education from './Education';\nimport Spinner from '../../Spinner.js';\nimport isEmpty from '../../validation/isEmpty.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      profile: nextProps.profile\n    });\n  }\n\n  render() {\n    const {\n      profile,\n      loading\n    } = this.props.profile;\n    let AllProfile;\n\n    let userExperience = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Experience, {\n        workexperience: profile.workexperience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 28\n    }, this);\n\n    let userEducation = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Education, {\n        education: profile.education\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this);\n\n    if (profile === null || loading) {\n      AllProfile = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    } else {\n      AllProfile = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Yes, There is Profile. His name is \", profile.username, \". And his phone number is \", profile.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(NavName, {\n        pageName: \"Profile\",\n        pageDescription: \"Add or Update profile information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/editProfile\",\n        style: {\n          textDecoration: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editBtn\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserEdit, {\n            style: {\n              color: 'black',\n              fontSize: 20,\n              marginRight: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 99\n          }, this), \" Edit Profile \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this), AllProfile]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nProfile.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Profile);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/Profile.js"],"names":["React","Component","RiGithubFill","FaFacebookF","FaInstagram","FaDribbble","FaUserEdit","AiOutlineLinkedin","Link","connect","PropTypes","getCurrentProfile","NavName","Experience","Education","Spinner","isEmpty","Profile","componentDidMount","props","componentWillReceiveProps","nextProps","setState","profile","render","loading","AllProfile","userExperience","workexperience","userEducation","education","username","phone","textDecoration","color","fontSize","marginRight","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,SAAUC,YAAV,QAA8B,gBAA9B;AACA,SAAUC,WAAV,EAAuBC,WAAvB,EAAqCC,UAArC,EAAkDC,UAAlD,QAAmE,gBAAnE;AACA,SAASC,iBAAT,QAAmC,gBAAnC;AACA,SAASC,IAAT,QAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAGA,OAAOC,OAAP,MAAoB,6BAApB;;;AAGC,MAAMC,OAAN,SAAsBhB,SAAtB,CAAgC;AAE7BiB,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWR,iBAAX;AAEH;;AACDS,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAExB,SAAKC,QAAL,CAAc;AACTC,MAAAA,OAAO,EAAEF,SAAS,CAACE;AADV,KAAd;AAIV;;AACFC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA,OAAF;AAAWE,MAAAA;AAAX,QAAsB,KAAKN,KAAL,CAAWI,OAAvC;AACE,QAAIG,UAAJ;;AACF,QAAKC,cAAc,gBACA;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,cAAc,EAAEJ,OAAO,CAACK;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADnB;;AAMA,QAAIC,aAAa,gBACE;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEN,OAAO,CAACO;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADnB;;AAKG,QAAIP,OAAO,KAAK,IAAZ,IAAoBE,OAAxB,EAAiC;AACtCC,MAAAA,UAAU,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAb;AACD,KAFM,MAEA;AACLA,MAAAA,UAAU,gBAAG;AAAA,0DAAwCH,OAAO,CAACQ,QAAhD,gCAAoFR,OAAO,CAACS,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AACD;;AAEG,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACM,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,SAAlB;AAA4B,QAAA,eAAe,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADN,eAEO,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAC;AAAhB,SAA/B;AAAA,+BAAmD;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAAA,kCAA4B,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE,OAAR;AAAgBC,cAAAA,QAAQ,EAAC,EAAzB;AAA6BC,cAAAA,WAAW,EAAC;AAAzC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFP,EA6EKV,UA7EL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiFH;;AAlH4B;;AAsHjCT,OAAO,CAACoB,SAAR,GAAoB;AAClB1B,EAAAA,iBAAiB,EAAED,SAAS,CAAC4B,IAAV,CAAeC,UADhB;AAElBhB,EAAAA,OAAO,EAAEb,SAAS,CAAC8B,MAAV,CAAiBD;AAFR,CAApB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,OAAO,EAAEmB,KAAK,CAACnB;AADmB,CAAZ,CAAxB;;AAGA,eAAed,OAAO,CAACgC,eAAD,EAAkB;AAAG9B,EAAAA;AAAH,CAAlB,CAAP,CAAiDM,OAAjD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../../Css/Profile.css\";\r\nimport {  RiGithubFill,} from \"react-icons/ri\";\r\nimport {  FaFacebookF, FaInstagram , FaDribbble , FaUserEdit} from \"react-icons/fa\";\r\nimport { AiOutlineLinkedin  } from \"react-icons/ai\";\r\nimport { Link} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile } from '../../actions/profileAction.js';\r\nimport NavName from './NavName'\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport Spinner from '../../Spinner.js'\r\n\r\n\r\nimport isEmpty from '../../validation/isEmpty.js';\r\n\r\n\r\n class Profile extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getCurrentProfile();\r\n       \r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n          \r\n                this.setState({\r\n                     profile: nextProps.profile,\r\n                });\r\n                \r\n     }\r\n    render() {\r\n        const { profile, loading} = this.props.profile; \r\n          let AllProfile;\r\n        let  userExperience = (\r\n                           <div>\r\n                               <Experience workexperience={profile.workexperience} />\r\n                            </div>\r\n              );\r\n         \r\n        let userEducation = (\r\n                           <div>\r\n                               <Education education={profile.education} />\r\n                            </div>\r\n          )\r\n           if (profile === null || loading) {\r\n      AllProfile = <Spinner />;\r\n    } else {\r\n      AllProfile = <h1>Yes, There is Profile. His name is {profile.username}. And his phone number is {profile.phone}</h1>;\r\n    }\r\n          \r\n        return (\r\n            <div className=\"profile\">\r\n                  <NavName pageName=\"Profile\" pageDescription=\"Add or Update profile information.\"  />\r\n                   <Link to=\"/editProfile\" style={{textDecoration:0}}><button className=\"editBtn\"><FaUserEdit style={{color: 'black',fontSize:20, marginRight:10}}/> Edit Profile </button>\r\n                                    </Link>\r\n                {/* <div className=\"upperProfile\">\r\n                    <div className=\"PersonalInfo\">\r\n                       <div className=\"upper\">\r\n                           <img src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8ZmFjZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&w=1000&q=80\"  alt=\"user\"></img>\r\n                           <div className=\"userName\">\r\n                               <h2>{isEmpty(profile.username) ? \"XXXXXXXX\" : (profile.username)}</h2>\r\n                               <h4>{isEmpty(profile.profession) ? \"XXXXXXXX\" : (profile.profession)}</h4>\r\n                           </div>\r\n                       </div>\r\n                        <div className=\"lower\">\r\n                            <ul className=\"socialLinks\">\r\n                                   <li><FaFacebookF style={{color: 'lightBlue',fontSize:24}}/></li>\r\n                                    <li><FaInstagram style={{color: 'lightBlue',fontSize:24}}/></li>\r\n                                    <li><RiGithubFill style={{color: 'lightBlue',fontSize:24}}/></li>\r\n                                    <li><AiOutlineLinkedin style={{color: 'lightBlue',fontSize:24}}/></li>\r\n                                    <li><FaDribbble style={{color: 'lightBlue',fontSize:24}}/></li>\r\n                            </ul>\r\n                             <button className=\"portfolioSite\">PortFolio Site</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                     <div className=\"aboutUser\">\r\n                        <h2>About</h2>\r\n                        <p>\r\n                            {isEmpty(profile.description) ? \"XXXXXXXX\" : (profile.description)}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"lowerProfile\">\r\n                     <div className=\"otherInfo\">\r\n                       \r\n                         <ul>          \r\n                                <li>Experience: <span>{isEmpty(profile.experience) ? \"XXXXX\" : (profile.experience)}</span></li>\r\n                                <li>Hourly Charge: <span>{isEmpty(profile.hourlyRate) ? \"XXXXX\" : (profile.hourlyRate)}</span></li>\r\n                                <li>Availibilty: <span>{isEmpty(profile.availibilty) ? \"XXXXX\" : (profile.availibilty)}h/w</span></li>\r\n                                <li>Address: <span>{isEmpty(profile.address) ? \"XXXXX\" : (profile.address)}</span></li>\r\n                                <li>Phone: <span>{isEmpty(profile.phone) ? \"XXXXX\" : (profile.phone)}</span></li>\r\n                                <li>Age: <span>{isEmpty(profile.age) ? \"XXXXX\" : (profile.age)}</span></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"skillsAndLanguage\">\r\n                        <div className=\"skills\">\r\n                             <h4>Skills</h4>\r\n                                    <ul>\r\n                                        {isEmpty(profile.skills) ? \"No data\" : (profile.skills.map(skills => (\r\n                     <li>{skills}</li> \r\n                 )))}\r\n                                    </ul>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"skills\">\r\n                             <h4>Langauges</h4>\r\n                                    <ul>\r\n                                        {isEmpty(profile.languages) ? \"No data\" : (profile.languages.map(languages => (\r\n                     <li>{languages}</li> \r\n                 )))}\r\n                                    </ul>\r\n                                    \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"profileCredentials\">\r\n                     <div className=\"education\">\r\n                        {userEducation}\r\n                    </div>\r\n                    <div className=\"experience\">   \r\n                        {userExperience}\r\n                    </div>\r\n                    \r\n                </div>         */}\r\n                {AllProfile}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\nexport default connect(mapStateToProps, {  getCurrentProfile })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}