{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\ejobs\\\\ejobs\\\\src\\\\Components\\\\LoggedUser\\\\AsClient.js\";\nimport React, { Component } from 'react';\nimport { getClientProject } from '../../actions/projectAction.js';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Project from './Project';\nimport \"../../Css/AsClient.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AsClient extends Component {\n  componentDidMount() {\n    this.props.getClientProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      clientProject: nextProps.project\n    });\n  }\n\n  render() {\n    const {\n      project\n    } = this.props.project;\n    let ProjectData;\n    ProjectData = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Project, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 28\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ProjectData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAsClient.propTypes = {\n  getClientProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.clientProject\n});\n\nexport default connect(mapStateToProps, {\n  getClientProject\n})(AsClient);","map":{"version":3,"sources":["D:/Code/ejobs/ejobs/src/Components/LoggedUser/AsClient.js"],"names":["React","Component","getClientProject","connect","PropTypes","Project","AsClient","componentDidMount","props","componentWillReceiveProps","nextProps","setState","clientProject","project","render","ProjectData","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWN,gBAAX;AAEH;;AACAO,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AACzB,SAAKC,QAAL,CAAc;AACTC,MAAAA,aAAa,EAAEF,SAAS,CAACG;AADhB,KAAd;AAIV;;AAEFC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA;AAAF,QAAc,KAAKL,KAAL,CAAWK,OAA/B;AACA,QAAIE,WAAJ;AAGMA,IAAAA,WAAW,gBACE;AAAA,6BACC,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADb;AAUN,wBACI;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAjC4B;;AAmCjCT,QAAQ,CAACU,SAAT,GAAqB;AACnBd,EAAAA,gBAAgB,EAAEE,SAAS,CAACa,IAAV,CAAeC,UADd;AAEnBL,EAAAA,OAAO,EAAET,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAArB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,OAAO,EAAEQ,KAAK,CAACT;AADmB,CAAZ,CAAxB;;AAGA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAGlB,EAAAA;AAAH,CAAlB,CAAP,CAAgDI,QAAhD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { getClientProject } from '../../actions/projectAction.js'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Project from './Project';\r\nimport \"../../Css/AsClient.css\"\r\n\r\nclass AsClient extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getClientProject();\r\n           \r\n    }\r\n     componentWillReceiveProps(nextProps){   \r\n                this.setState({\r\n                     clientProject: nextProps.project\r\n                });\r\n                \r\n     }\r\n \r\n    render() {\r\n        const { project } = this.props.project; \r\n        let ProjectData;\r\n\r\n        \r\n              ProjectData = (\r\n                           <div>\r\n                            <Project project={project}/>\r\n                         </div>\r\n         )\r\n        \r\n          \r\n     \r\n\r\n     \r\n        return (\r\n            <div>\r\n                {ProjectData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAsClient.propTypes = {\r\n  getClientProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.clientProject\r\n});\r\nexport default connect(mapStateToProps, {  getClientProject })(AsClient);\r\n"]},"metadata":{},"sourceType":"module"}